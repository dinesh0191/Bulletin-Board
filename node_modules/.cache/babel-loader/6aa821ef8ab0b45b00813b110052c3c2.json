{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\project\\\\bulletin-board\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Draggable from \"react-draggable\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nvar randomColor = require(\"randomcolor\");\n\nconst [item, setItem] = useState(\"\"); // this is the value of input field. Initialize as empty string\n\nconst [items, setItems] = useState(JSON.parse(localStorage, getItem(\"items\")) || []);\n\nconst keyPress = event => {\n  let code = event.keyCode || event.which;\n\n  if (code === 13) {\n    newItem();\n  }\n};\n\nconst newItem = () => {\n  if (item.trim() !== \"\") {\n    // if input is not blank, create a new item object\n    const newItem = {\n      id: uuidv4(),\n      item: item,\n      color: randomColor({\n        luminosity: \"light\"\n      }),\n      defaultPos: {\n        x: 100,\n        y: 0\n      }\n    };\n  }\n};\n\n/*#__PURE__*/\n_jsxDEV(\"input\", {\n  value: item,\n  onChange: e => setItem(e.target.value),\n  placeholder: \"Enter something...\",\n  onKeyPress: e => keyPress(e)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 1\n}, this);\n\n/*#__PURE__*/\n_jsxDEV(\"button\", {\n  onClick: newItem,\n  children: \"ENTER\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 1\n}, this);\n\nexport default App;","map":{"version":3,"sources":["F:/project/bulletin-board/src/App.js"],"names":["React","useState","useEffect","Draggable","v4","uuidv4","randomColor","require","item","setItem","items","setItems","JSON","parse","localStorage","getItem","keyPress","event","code","keyCode","which","newItem","trim","id","color","luminosity","defaultPos","x","y","e","target","value","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,C,CAAsC;;AACtC,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAChCW,IAAI,CAACC,KAAL,CAAWC,YAAX,EAAyBC,OAAO,CAAC,OAAD,CAAhC,KAA8C,EADd,CAAlC;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAIC,IAAI,GAAGD,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACG,KAAlC;;AACA,MAAIF,IAAI,KAAK,EAAb,EAAiB;AACfG,IAAAA,OAAO;AACR;AACF,CALD;;AAOA,MAAMA,OAAO,GAAG,MAAM;AACpB,MAAIb,IAAI,CAACc,IAAL,OAAgB,EAApB,EAAwB;AACtB;AACA,UAAMD,OAAO,GAAG;AACdE,MAAAA,EAAE,EAAElB,MAAM,EADI;AAEdG,MAAAA,IAAI,EAAEA,IAFQ;AAGdgB,MAAAA,KAAK,EAAElB,WAAW,CAAC;AAAEmB,QAAAA,UAAU,EAAE;AAAd,OAAD,CAHJ;AAIdC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb;AAJE,KAAhB;AAMD;AACF,CAVD;;AAYA;AAAA;AACE,EAAA,KAAK,EAAEpB,IADT;AAEE,EAAA,QAAQ,EAAGqB,CAAD,IAAOpB,OAAO,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGE,EAAA,WAAW,EAAC,oBAHd;AAIE,EAAA,UAAU,EAAGF,CAAD,IAAOb,QAAQ,CAACa,CAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA;;AAMA;AAAA;AAAQ,EAAA,OAAO,EAAER,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,eAAeW,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Draggable from \"react-draggable\";\nimport { v4 as uuidv4 } from \"uuid\";\nvar randomColor = require(\"randomcolor\");\n\nconst [item, setItem] = useState(\"\"); // this is the value of input field. Initialize as empty string\nconst [items, setItems] = useState(\n  JSON.parse(localStorage, getItem(\"items\")) || []\n);\n\nconst keyPress = (event) => {\n  let code = event.keyCode || event.which;\n  if (code === 13) {\n    newItem();\n  }\n};\n\nconst newItem = () => {\n  if (item.trim() !== \"\") {\n    // if input is not blank, create a new item object\n    const newItem = {\n      id: uuidv4(),\n      item: item,\n      color: randomColor({ luminosity: \"light\" }),\n      defaultPos: { x: 100, y: 0 },\n    };\n  }\n};\n\n<input\n  value={item}\n  onChange={(e) => setItem(e.target.value)}\n  placeholder=\"Enter something...\"\n  onKeyPress={(e) => keyPress(e)}\n/>;\n<button onClick={newItem}>ENTER</button>;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}